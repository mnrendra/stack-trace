{
  "branches": [
    "+([0-9])?(.{+([0-9]),x}).x",
    "main",
    "next",
    {
      "name": "rc",
      "prerelease": true
    },
    {
      "name": "beta",
      "prerelease": true
    },
    {
      "name": "alpha",
      "prerelease": true
    }
  ],
  "plugins": [
    ["@semantic-release/commit-analyzer", {
      "releaseRules": [
        { "type": "docs", "release": "patch" },
        { "type": "style", "release": "patch" },
        { "type": "refactor", "release": "patch" },
        { "type": "perf", "release": "patch" },
        { "type": "test", "release": "patch" },
        { "type": "build", "release": "patch" },
        { "type": "ci", "release": "patch" },
        { "type": "chore", "release": "patch" },
        { "type": "revert", "release": "patch" }
      ]
    }],
    "@semantic-release/release-notes-generator",
    "@semantic-release/github",
    "@semantic-release/npm",
    ["@semantic-release/git", {
      "assets": ["package.json", "package-lock.json"],
      "message": "release: v${nextRelease.version}\n\n${nextRelease.notes}"
    }],
    ["@semantic-release/exec", {
      "prepareCmd": "npx clean-package",
      "publishCmd": "ls -laihs && echo \"${process.env.GITHUB_REPOSITORY}\" && echo \"v${nextRelease.version}\" && echo \"v${nextRelease.name}\" && git tag -s v${nextRelease.version} -m \"release: v${nextRelease.version}\" && git push origin v${nextRelease.version}",
      "successCmd": "npx clean-package restore"
    }]
  ]
}
